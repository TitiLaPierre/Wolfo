#
# This file is part of Wolfo.
#
# Wolfo is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Wolfo is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Wolfo.  If not, see <https://www.gnu.org/licenses/>.
#
# Copyright 2020 - Romitou <romitou@protonmail.com> and contributors
#

# Many code in this file isn't used for the moment.
# We will enhance this part of Wolfo soon!

on script load:
	send join "&3&lWolfo &7&l▪ &8Took %difference between now and {wolfo::loading}%." to ops
	send "" to ops
	send "&3&lWolfo &7&l▪ &7Loading cosmetics ..." to ops
	set {wolfo::loading} to now

function wolfoDraw(type: text, p: text):
	if {_type} is "erase":
		stopEffect id "wolfo-%{_p}%"
	set {_p} to {_p} parsed as player
	if {_type} is "selected":
		stopEffect id "wolfo-%{_type}%"
		set {_loc} to location at x-coordinate of {_p}, y-coordinate of {_p} + 2, z-coordinate of {_p} in world "world"
		if {wolfo::players::spawn::%{_p}%} is 3, 4, 5, 9, 10, 11, 15, 16, 17, 21, 22 or 23:
			set {_angle} to 45
		if {wolfo::players::spawn::%{_p}%} is 6, 7, 8, 18, 19 or 20:
			set {_angle} to 90
		else:
			set {_angle} to 0
		set {_name} to wolfoGetText("ANIMATION.SELECTION")
		drawImage file "%{_name}%.png", center {_loc}, id "wolfo-%{_type}%", pixelStepX 2, pixelStepY 2, scale 12, visibleRange 50, xR 0, yR {_angle}, zR 0, disX 0, disY 4, disZ 0, tps 0, second 2
	else if {_type} is "kill":
		wolfoKill({_p})
		wolfoGetLoc("GAME.LOCATIONS.MIDDLE") is set
		set {_loc} to wolfoGetLoc("GAME.LOCATIONS.MIDDLE")
		add 3 to y-coordinate of {_loc}
		set {_pos} to location of {_p}
		add 1 to y-coordinate of {_pos}
		drawArc particle "flame", center location of {_pos}, target location of {_loc}, id "wolfo-rayon-%{_p}%", rainbowMode false, density 50, height 0, pitchMultiplier 0, visibleRange 30
		set {_r} to 0
		loop 20 times:
			stopEffect id "wolfo-sphere-%{_p}%"
			drawSphere style 1, particle "flame", center location of {_pos}, id "wolfo-sphere-%{_p}%", rainbowMode false, radius {_r}, density 400, visibleRange 32, pulseDelay 1
			add 0.1 to {_r}
			wait a tick
		wait 8 ticks
		chance of 50%:
			play sound "entity.wither.death" with volume 10 and pitch 1 at {_p} for players
		else:
			play sound "entity.wither.spawn" with volume 10 and pitch 1 at {_p} for players
		strike lightning effect at location of {_p}
		wait 2 ticks
		stopEffect id "wolfo-rayon-%{_p}%"
		stopEffect id "wolfo-sphere-%{_p}%"
	else if {_type} is "spawn":
		hide {_p} from players
		drawWarpRings style 2, particle "redstone", RGB 80, 255, 255, center location of {_p}, id "wolfo-%{_type}%", rainbowMode true, scan true, height 2, radius 1, ringCount 40, ringDensity 20, visibleRange 32, pulseDelay 1
		wait 2 second
		stopEffect id "wolfo-%{_type}%"
		reveal {_p} to players
	else if {_type} is "center":
		wolfoGetLoc("GAME.LOCATIONS.MIDDLE") is set
		drawAtom particle1 "redstone", particle2 "flame", center wolfoGetLoc("GAME.LOCATIONS.MIDDLE"), id "wolfo-%{_type}%", rainbowMode true, innerPCount 10, innerRadius .5, outerPCount 2, orbitCount 5, start 0, visibleRange 30, rotation 15

function wolfoCosmetic(type: integer, p: player):
	if {_type} is 1 or 2:
		if {_type} is 1:
			set {_title} to wolfoGetText("GUI.EFFECT_SELECT", {_p})
			add wolfoGetObjects("COSMETICS.EFFECT") to {_p::*}
			set {_eff} to "EFFECT"
		else if {_type} is 2:
			if {wolfo::cosmetic::%{_p}%::1} is "nyancat":
				clear {wolfo::cosmetic::%{_p}%::2}
				wolfoCosmetic(3, {_p})
				stop
			set {_title} to wolfoGetText("GUI.PARTICLE_SELECT", {_p})
			add wolfoGetObjects("COSMETICS.PARTICLE") to {_p::*}
			set {_eff} to "PARTICLE"
		wolfoMenuDeco({_p}, {_title}, 5)
		make a gui slot 41 of {_p} with (wolfoGetText("OTHER_ITEMS.LANG") parsed as item) named colored wolfoGetText("ITEM.LANG", {_p}) to run {_p} command "/wolfo lang"
		set {_loop} to 11
		loop {_p::*}:
			while {_loop} is 16, 17, 18, 26, 27 or 28:
				add 1 to {_loop}
			set {_value::*} to loop-value split at ";"
			make a gui slot {_loop} of {_p} with {_value::2} parsed as material named colored wolfoGetText("COSMETICS.%{_eff}%.%{_value::1} in upper case%", {_p}) to run:
				set {wolfo::cosmetic::%{_p}%::%{_type}%} to {_value::1}
				set {wolfo::cosmetic::%{_p}%::%{_type}%::name} to join wolfoGetText("COSMETICS.%{_eff}%.%{_value::1} in upper case%", {_p}) and " "
				close {_p}'s inventory
				add 1 to {_type}
				wolfoCosmetic({_type}, {_p})
			add 1 to {_loop}
	else if {_type} is 3:
		set {_particle} to {wolfo::cosmetic::%{_p}%::2}
		set {_type} to {wolfo::cosmetic::%{_p}%::1}
		set {wolfo::cosmetic::%{_p}%::active} to true
		if {_type} is "wings":
			set {_r} to random integer between 1 and 7
			drawWings style {_r}, particle1 "%{_particle}%", particle2 "%{_particle}%", particle3 "%{_particle}%", center {_p}, id "wolfo-%{_p}%", angle 110, height 0, space 0.2, visibleRange 30, tps 0, second 1
		if {_type} is "nyancat":
			drawNyanCat center {_p}, id "wolfo-%{_p}%", visibleRange 30, tps 0, second 0
		if {_type} is "rings":
			drawRings particle "%{_particle}%", center {_p}, id "wolfo-%{_p}%", randomRotation true, animated true, radius 1, ringCount 3, ringDensity 1, visibleRange 30
		if {_type} is "spiral":
			drawComplexSpiral particle "%{_particle}%", center {_p}, id "wolfo-%{_p}%", rainbowMode true, clockwise true, scan true, radius 1, density 50, height 6, effectMod .05, start 0, visibleRange 30
		set slot 0 of {_p} to a barrier named wolfoGetText("ITEM.COSM_OFF", {_p})
		set {_effect} to colored {wolfo::cosmetic::%{_p}%::1::name}
		set {_particle} to colored {wolfo::cosmetic::%{_p}%::2::name}
		if {wolfo::cosmetic::%{_p}%::2} is not set:
			send join wolfoGetText("PREFIX.GENERAL"), wolfoGetText("MESSAGE.COSMETICS.ON1", {_p}), {_effect} and wolfoGetText("MESSAGE.COSMETICS.ON2", {_p}) to {_p}
		else:
			send join wolfoGetText("PREFIX.GENERAL"), wolfoGetText("MESSAGE.COSMETICS.ON1", {_p}), {_effect}, "&fen ", {_particle} and wolfoGetText("MESSAGE.COSMETICS.ON2", {_p}) to {_p}
	else if {_type} is 4:
		clear {wolfo::cosmetic::%{_p}%::active}
		stopEffect "wolfo-%{_p}%"
		set slot 0 of {_p} to a enchanted book named wolfoGetText("ITEM.COSM", {_p})
		send join wolfoGetText("PREFIX.GENERAL") and wolfoGetText("MESSAGE.COSMETICS.STOP", {_p}) to {_p}
